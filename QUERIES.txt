===================
SELECT STATMENTS
===================
SELECT * FROM aircrafts
select aircraft_code from aircrafts
======================================
REMOVE DEPLICATE VALUE -> "DISTNICT"
======================================
/*select distinct * from tickets*/
/*select * from flights*/
select distinct departure_airport , arrival_airport , status from flights
==============
WHERE CALUSE
==============
/*select airport_code , airport_name , city from airports where city ->> 'en' = 'Surgut'*/
/*select * from aircrafts where aircraft_code = '773'*/
select * from airports where timezone = 'Asia/Yakutsk'
===================================
OPERATOR USED WITH WHERE CLAUSE
===================================
/*select * from airports where timezone != 'Asia/Yakutsk'*/
/*select * from bookings where total_amount > 200000*/
/*select * from bookings where total_amount <= 37900*/
select * from bookings where total_amount < 37900
==================================
WHERE CLAUSE+AND , WHERE CLAUSE+OR
==================================
/*select * from seats where aircraft_code = '319' AND fare_conditions = 'Business'*/
select * from seats where aircraft_code = '319' or seat_no = '2A'
====================================
WHERE CLAUSE + LIKE + NOT LIKE AND _
====================================
SELECT * from aircrafts where model ->> 'en' like '%200%'
/*SELECT * from aircrafts where model ->> 'en' not like 'Airbus%' and model ->> 'en' not like 'Boeing%'*/
/*SELECT * from aircrafts where model ->> 'en' not like '_Airbus%' and model ->> 'en' not like '_Boeing%'*/
/*select passenger_name from tickets where passenger_name like '__IN%'*/
/*select passenger_name from tickets where passenger_name like '%ALINA%'*/
====================
LIMIT AND ORDER BY
===================
/*select flight_id , fare_conditions from ticket_flights where flight_id >= 30625 and fare_conditions = 'Business' limit 10*/ 
/*select passenger_name , contact_data from tickets order by passenger_name limit 10*/
/*select passenger_name , contact_data from tickets order by passenger_name desc limit 10*/
/*select passenger_name , contact_data from tickets where passenger_name = 'ZULFIYA ZAKHAROVA' order by passenger_name desc limit 10*/
===============================================
FETCH AND LIMIT (USING OFFSET - SKIP THE ROWS)
===============================================
/*select * from boarding_passes fetch first 10 row only*/
select * from boarding_passes offset 10 rows fetch first 10 row only
==================================
WHERE CLAUSE + BETWEEN , IN & AS
==================================
/*select * from aircrafts where range in (5700 , 4200 , 6700)*/
select * from bookings where book_date in ('2017-07-05%' ,'2017-08-10%' , '2017-07-18%' )
select b.book_date as dateofbooking , b.total_amount as tm from bookings as b where book_date in ('2017-07-05%' ,'2017-08-10%' , '2017-07-18%' )
========
NOT IN
========
select * from aircrafts where aircraft_code not in ('321' , '786' , '319')
select * from flights where status not in ('Schedule' , 'Delayed' , 'Cancelled')
=======================
ISNULL AND IS NOT NULL
=======================
/*select * from flights where actual_departure isnull and actual_arrival isnull*/
select * from flights where actual_departure is not null and actual_arrival is not null
======
TEST
=====
Questions:
1. List the cities in which there is no flights from Moscow ?
2. Select airports in a time zone is in Asia / Novokuznetsk and Asia / Krasnoyarsk ?
3. Which planes have a flight range in the range from 3,000 km to 6,000 km ?
4. Get the model , range,  and miles of every air craft exist in the Airlines database, notice that miles = range / 1.609  and round the result to 2 numbers after the float point?
Answers:
select distinct city from airports where city->> 'en' != 'Moscow%'order by city
select  * from airports where timezone in ('Asia/Novokuznetsk' , 'Asia/Krasnoyarsk') order by airport_code
select * from aircrafts where range between 3000 and 6000 order by range
select model , range , round(range/1.609,2) from aircrafts order by round
select * , round(range/1.690 , 2) as rangeInMiles from aircrafts where aircraft_code = 'SU9'

=========================================
count(), create table , insert into table
=========================================
create table school(
id serial primary key,
name text not null,
subject text not null,
age text 
)

insert into school(name , subject , age)
values ('saif' , 'Maths' , 34),
		('Neha' , 'English' , 22),
		('Huma' , 'Science' , 31),
		('Bilal' , 'Urdu' , 33),
		('Hiba' , 'Pak Studies' , null);

select * from schools
select count(age) from schools
select count(passenger_name) from tickets
select count(distinct passenger_name) from tickets

=============================
sum() , min() , max() , avg()
=============================
select sum(total_amount) from bookings
select avg(total_amount) from bookings
select max(total_amount) from bookings
select min(total_amount) from bookings
====================
GROUP BY and HAVING
====================
select city , count(*) from airports group by city
select city , count(*) from airports group by city having count(*) > 1
========
Test 2
=======
1. Calculate the Average tickets Sales?
2. Return the number of seats in the air craft that has aircraft code = 'CN1' ?
4. Write a query to return the aircraft_code and the number of seats of each air craft ordered ascending?
5. calculate the number of seats in the salons for all aircraft models, but now taking into account the class of service Business class and Economic class.

Answer:

select avg(total_amount) from bookings
select count(*) from seats where aircraft_code = 'CN1'
select aircraft_code , count(*) from seats group by aircraft_code order by count
select aircraft_code , fare_conditions , count(*) from seats group by aircraft_code , fare_conditions order by aircraft_code , fare_conditions
======
CASE
=====
select *, 
case when age>= 25 then 'old'
	when age isnull then 'unknown'
	else 'young' end is_old 
from school
-----------
select DATE_PART('month' , book_date) as month , sum(total_amount), 
case when sum(total_amount) > 6958118400.00 then 'the most'
	when sum(total_amount) < 6958118400.00 then 'the least'
	else 'the medium' end booking_qt
from bookings
group by month


========
NULLIF
========
-select count(nullif(actual_departure,null)) as count1 , count(nullif(actual_arrival,null)) as count2 from flights
-select count(*) - count(nullif(actual_departure,null)) as non_count_1 , count(*) - count(nullif(actual_arrival,null)) as non_count_2 from flights

===========
COALESCE
===========
-select status , coalesce(actual_departure) , coalesce(actual_arrival) from flights
-select status , coalesce(actual_departure , current_timestamp) , coalesce(actual_arrival,current_timestamp) from flights
-select status , coalesce(actual_departure , current_timestamp) , coalesce(actual_arrival,current_timestamp) from flights where actual_departure = NULL or actual_arrival = null

========
TEST
=======
Question: write a query to arrange the range of model of air crafts so  Short range is less than 2000, Middle range is more than 2000 
and less than 5000 & any range above 5000 is long range?

Answer:
- select aircraft_code, range,
case when range<= 2000 then 'Short_Range'
	when range>2000 and range<5000 then 'Middle_Range'
	else 'Long_Range' end Ranges
from aircrafts order by range

====================
TIMESTAMP EXTRACT
====================
-select extract ('day' from book_date)as day , sum(total_amount)as sales from bookings group by 1 order by day
-select extract('month' from book_date) as month , extract('day' from book_date) as day,  sum(total_amount) as sales from bookings group by 1,2 order by day
==========================
DATE_TRUNC() & DATE_PART()
==========================
-select book_date , count(*)  from bookings group by book_date
-select date_trunc('day' , book_date) as day , count(total_amount) as total_bookings from bookings group by day
-select date_trunc('day' , book_date) as day ,date_trunc('month' , book_date) as month, count(total_amount) as total_bookings from bookings group by day , month

-select date_part('day' , book_date) as day , date_part('month' , book_date) as month , sum(total_amount)as total_bookings from bookings group by day , month
having date_part('day' , book_date) = 21 and date_part('month' , book_date) = 6

-select date_part('dow',book_date) as day , date_part('month',book_date) as month , sum(total_amount) as total_bookings from bookings group by day , month having date_part('month',book_date) = 7
-select date_part('month',book_date) as month , sum(total_amount) as total_bookings from bookings group by 1

=============
CURRENT DATE
=============
- select book_ref , book_date from bookings where book_date = '13-08-2017'::DATE
- select public.now()  #extract last data from database.